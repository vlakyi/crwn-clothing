{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD0Og8AXQgl9Wi3G-LP66l6VhjW9K6fVSs\",\n  authDomain: \"crwn-db-d50ae.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-d50ae.firebaseio.com\",\n  projectId: \"crwn-db-d50ae\",\n  storageBucket: \"crwn-db-d50ae.appspot.com\",\n  messagingSenderId: \"680685336031\",\n  appId: \"1:680685336031:web:10e4115a4f552ac260c06a\",\n  measurementId: \"G-2PMKCZ4HVW\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey); // mechanism to make everething in 1 call to prevent sending half request (on network connection issues for example)\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollections = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollections.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googlePprovider = new firebase.auth.GoogleAuthProvider();\ngooglePprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googlePprovider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/React/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollections","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","auth","googlePprovider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD0Og8AXQgl9Wi3G-LP66l6VhjW9K6fVSs\",\r\n  authDomain: \"crwn-db-d50ae.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-d50ae.firebaseio.com\",\r\n  projectId: \"crwn-db-d50ae\",\r\n  storageBucket: \"crwn-db-d50ae.appspot.com\",\r\n  messagingSenderId: \"680685336031\",\r\n  appId: \"1:680685336031:web:10e4115a4f552ac260c06a\",\r\n  measurementId: \"G-2PMKCZ4HVW\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n    } catch (error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n}\r\n\r\nexport const addCollectionAndDocuments = async(collectionKey, objectsToAdd) => {\r\n  const collectionRef = firestore.collection(collectionKey);\r\n  \r\n  // mechanism to make everething in 1 call to prevent sending half request (on network connection issues for example)\r\n  const batch = firestore.batch();\r\n  objectsToAdd.forEach(obj => {\r\n    const newDocRef = collectionRef.doc();\r\n    batch.set(newDocRef, obj);\r\n  });\r\n\r\n  return await batch.commit();\r\n}\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n  const transformedCollections = collections.docs.map(doc => {\r\n    const {title, items} = doc.data();\r\n\r\n    return {\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items\r\n    }\r\n  });\r\n\r\n  return transformedCollections.reduce((accumulator, collection) => {\r\n    accumulator[collection.title.toLowerCase()] = collection;\r\n    return accumulator;\r\n  } , {});\r\n}\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googlePprovider = new firebase.auth.GoogleAuthProvider();\r\ngooglePprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googlePprovider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}