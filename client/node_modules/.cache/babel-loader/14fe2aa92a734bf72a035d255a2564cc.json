{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\Desktop\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections'); // Creating Observer and update collection on each database change\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionType`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 82\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Vlad/Desktop/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","WithSpinner","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,MAAMC,8BAA8B,GAAGL,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMQ,0BAA0B,GAAGN,WAAW,CAACD,cAAD,CAA9C;;AAGA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,uBALmC,GAKT,IALS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEV,MAAAA;AAAF,QAAwB,KAAKW,KAAnC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB,CAFgB,CAIhB;;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJ8B,CAA/B;AAKH;;AAEDU,EAAAA,oBAAoB,GAAG;AACnB,SAAKT,uBAAL;AACH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGV,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,kBAA3B;AAA8C,MAAA,MAAM,EAAGV,KAAD,iBAAW,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEH;AAAvC,SAAoDG,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAhCkC;;AAmCvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,iBAAiB,EAAEgB,cAAc,IAAIO,QAAQ,CAACvB,iBAAiB,CAACgB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAejB,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        // Creating Observer and update collection on each database change\r\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collectionsMap);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.unsubscribeFromSnapshot();\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const {loading} = this.state;\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props}></CollectionsOverviewWithSpinner>} />\r\n                <Route path={`${match.path}/:collectionType`} render={(props) => <CollectionsPageWithSpinner isLoading={loading} {...props}></CollectionsPageWithSpinner>} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}